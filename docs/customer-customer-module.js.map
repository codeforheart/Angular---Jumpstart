{"version":3,"sources":["./src/app/customer/create-order/create-order.component.ts","./src/app/customer/create-order/create-order.component.html","./src/app/customer/customer-details/customer-details.component.ts","./src/app/customer/customer-details/customer-details.component.html","./src/app/customer/customer-edit/customer-edit.component.ts","./src/app/customer/customer-edit/customer-edit.component.html","./src/app/customer/customer-orders/customer-orders.component.ts","./src/app/customer/customer-orders/customer-orders.component.html","./src/app/customer/customer-routing.module.ts","./src/app/customer/customer.component.ts","./src/app/customer/customer.component.html","./src/app/customer/customer.module.ts","./src/app/customer/guards/can-activate.guard.ts","./src/app/customer/guards/can-deactivate.guard.ts"],"names":[],"mappings":"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","file":"customer-customer-module.js","sourcesContent":["import { Component, OnInit, ComponentRef, ViewChild, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { ICustomer, IProducts } from '../../shared/interfaces';\nimport { DataService } from '../../core/services/data.service';\nimport {GrowlerMessageType} from '../../core/growler/growler.service';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'cm-create-order',\n  templateUrl: './create-order.component.html',\n  styleUrls: ['./create-order.component.css']\n})\nexport class CreateOrderComponent implements OnInit {\n\n  static products;\n  customer: ICustomer;\n  // products: IProducts;\n  mapEnabled: boolean;\n  mapComponentRef: ComponentRef<any>;\n  errorMessage: string;\n  @ViewChild('createOrderForm', { static: true }) createOrderForm: NgForm;\n  @ViewChild('mapsContainer', { read: ViewContainerRef })\n  private mapsViewContainerRef: ViewContainerRef;\n  public counter: number = 0;\n  public sumOfAmountToPay: number = 0;\n\n  constructor(private route: ActivatedRoute,\n    private dataService: DataService,\n    private componentFactoryResolver: ComponentFactoryResolver) {\n    CreateOrderComponent.products = [\n      {\n        'productName': 'bamba',\n        'itemCost': 3.50,\n        'quantity': 0\n      },\n      {\n        'productName': 'bisli',\n        'itemCost': 3.20,\n        'quantity': 0\n      },\n      {\n        'productName': 'chips',\n        'itemCost': 3.10,\n        'quantity': 0\n      }\n    ];\n  }\n\n  indexTracker(index: number, value: any) {\n    return index;\n  }\n\n   get staticProductsData() {\n    return CreateOrderComponent.products;\n  }\n  get sumOfOrders() {\n    const sum = 0;\n    const products = CreateOrderComponent.products\n    const productsQuantities = products.map((item) => {\n      return item.quantity;\n    });\n    return productsQuantities.reduce((a, b) => a + b, 0);\n  }\n  ngOnInit() {\n    // Subscribe to params so if it changes we pick it up. Could use this.route.parent.snapshot.params[\"id\"] to simplify it.\n    this.route.parent.params.subscribe((params: Params) => {\n      const id = +params['id'];\n      if (id) {\n        this.dataService.getCustomer(id)\n          .subscribe((customer: ICustomer) => {\n            this.customer = customer;\n          });\n      }\n    });\n  }\n\n  updateSumOfOrders(e) {\n    this.sumOfOrders();\n  }\n\n  handleProductAdd(e) {\n    const {currentTarget} = e;\n    const eName = currentTarget.name;\n    const eType = currentTarget.dataset.type;\n\n    const updatedProduct = CreateOrderComponent.products.find((item) => item.productName === eName);\n    if (eType === 'plus') {\n      updatedProduct.quantity += 1;\n      this.sumOfAmountToPay += updatedProduct.itemCost;\n    } else {\n      updatedProduct.quantity -= 1;\n      this.sumOfAmountToPay -= updatedProduct.itemCost;\n      if (this.sumOfAmountToPay < 1) {\n        this.sumOfAmountToPay = 0;\n      }\n    }\n  }\n  async lazyLoadMapComponent() {\n    if (!this.mapsViewContainerRef.length) {\n      // Lazy load MapComponent\n      const { MapComponent } = await import('../../shared/map/map.component');\n      console.log('Lazy loaded map component!');\n      const component = this.componentFactoryResolver.resolveComponentFactory(MapComponent);\n      this.mapComponentRef = this.mapsViewContainerRef.createComponent(component);\n      this.mapComponentRef.instance.zoom = 10;\n      this.mapComponentRef.instance.customer = this.customer;\n      this.mapComponentRef.instance.enabled = true;\n    }\n  }\n\n\n\n  submit() {\n    this.createOrderForm.form.markAsPristine();\n  }\n}\n","<div>\n  <form (ngSubmit)=\"submit()\" class=\"create-order-form\" #createOrderForm=\"ngForm\" create-order-form=\"novalidate\">\n    <div class=\"form-group\" *ngIf=\"customer\">\n      <div>\n        Create Order for <b>{{ customer.firstName | capitalize}} {{ customer.lastName | capitalize}}</b>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Select Product</label>\n      <div class=\"products-container\">\n        <table class=\"products-table table table-hover\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th></th>\n              <th>Quantity</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let product of staticProductsData; let i = index;trackBy:indexTracker\">\n            <td>{{product.productName}}</td>\n            <td></td>\n            <td>\n              <div class=\"input-group\">\n                <span class=\"input-group-btn\">\n                  <button type=\"button\" name=\"{{product.productName}}\" [disabled]=\"quantityInput.value === '0'\" (click)=\"handleProductAdd($event)\" class=\"btn btn-default btn-number\" data-type=\"minus\" data-field=\"\">\n                      <span class=\"glyphicon glyphicon-minus\"></span>\n                  </button>\n                </span>\n                <input type=\"text\" name=\"{{product.productName}}\" [(ngModel)]=\"staticProductsData[i].quantity\" (change)=\"updateSumOfOrders($event)\" #quantityInput class=\"form-control input-number\" value=\"0\" min=\"0\" max=\"10\">\n                <span class=\"input-group-btn\">\n                      <button type=\"button\" name=\"{{product.productName}}\" [disabled]=\"quantityInput.value === '10'\" (mousedown)=\"handleProductAdd($event)\" class=\"btn btn-default btn-number\" data-type=\"plus\" data-field=\"\">\n                        <span class=\"glyphicon glyphicon-plus\"></span>\n                    </button>\n                </span>\n              </div>\n            </td>\n            <td>{{product.itemCost}}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"alert alert-danger\" *ngIf=\"errorMessage != null\"></div>\n      <div>\n        <div class=\"sm-col-6\"><b>Amount of products: </b>{{sumOfOrders}}</div>\n        <div class=\"sm-col-6\"><b>Amount to pay: </b>{{sumOfAmountToPay.toFixed(1)}}</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"pull-right\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"sumOfOrders === 0\">Buy</button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ComponentRef, ViewChild, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { ICustomer } from '../../shared/interfaces';\nimport { DataService } from '../../core/services/data.service';\n\n@Component({\n  selector: 'cm-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  customer: ICustomer;\n  mapEnabled: boolean;\n  mapComponentRef: ComponentRef<any>;\n\n  @ViewChild('mapsContainer', { read: ViewContainerRef }) \n  private mapsViewContainerRef: ViewContainerRef;\n\n  constructor(private route: ActivatedRoute, \n    private dataService: DataService,\n    private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  ngOnInit() {\n    // Subscribe to params so if it changes we pick it up. Could use this.route.parent.snapshot.params[\"id\"] to simplify it.\n    this.route.parent.params.subscribe((params: Params) => {\n      const id = +params['id'];\n      if (id) {\n        this.dataService.getCustomer(id)\n          .subscribe((customer: ICustomer) => {\n            this.customer = customer;\n            if (this.customer && this.customer.latitude) {\n              this.lazyLoadMapComponent();\n              // this.mapEnabled = true; // For eager loading map\n            }\n          });\n      }\n    });\n  }\n\n  async lazyLoadMapComponent() {\n    if (!this.mapsViewContainerRef.length) {\n      // Lazy load MapComponent\n      const { MapComponent } = await import('../../shared/map/map.component');\n      console.log('Lazy loaded map component!');\n      const component = this.componentFactoryResolver.resolveComponentFactory(MapComponent);\n      this.mapComponentRef = this.mapsViewContainerRef.createComponent(component);\n      this.mapComponentRef.instance.zoom = 10;\n      this.mapComponentRef.instance.customer = this.customer;\n      this.mapComponentRef.instance.enabled = true;\n    }\n  }\n\n\n}\n","<div class=\"container\">\n  <div class=\"row\" *ngIf=\"customer\">\n    <div class=\"col-md-2\">\n      <img src=\"assets/images/{{customer.gender | lowercase}}.png\" class=\"details-image\" />\n    </div>\n    <div class=\"col-md-10\">\n      <h4>\n          {{ customer.firstName | capitalize }} {{ customer.lastName | capitalize }}&nbsp;\n      </h4>\n      <br />\n      {{ customer.address }}\n      <br />\n      {{ customer.city }}, {{ customer.state.name }}\n    </div>\n  </div>\n  <br /><br />\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <!-- <cm-map [latitude]=\"customer.latitude\"\n           [longitude]=\"customer.longitude\"\n           [zoom]=\"10\"\n           [enabled]=\"mapEnabled\"\n           [markerText]=\"'<h3>' + customer.firstName + ' ' + customer.lastName + '</h3>' + customer.city + ', ' + customer.state.name\"></cm-map> -->\n\n      <!-- lazy load the map component -->\n      <div>\n          <ng-container #mapsContainer></ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"!customer\" class=\"container\">\n   No customer found\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\nimport { DataService } from '../../core/services/data.service';\nimport { ModalService, IModalContent } from '../../core/modal/modal.service';\nimport { ICustomer, IState } from '../../shared/interfaces';\nimport { GrowlerService, GrowlerMessageType } from '../../core/growler/growler.service';\nimport { LoggerService } from '../../core/services/logger.service';\n\n@Component({\n  selector: 'cm-customer-edit',\n  templateUrl: './customer-edit.component.html',\n  styleUrls: ['./customer-edit.component.css']\n})\nexport class CustomerEditComponent implements OnInit {\n\n  customer: ICustomer =\n    {\n      id: 0,\n      firstName: '',\n      lastName: '',\n      gender: '',\n      address: '',\n      city: '',\n      state: {\n        abbreviation: '',\n        name: ''\n      }\n    };\n  states: IState[];\n  errorMessage: string;\n  deleteMessageEnabled: boolean;\n  operationText = 'Insert';\n  @ViewChild('customerForm', { static: true }) customerForm: NgForm;\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private growler: GrowlerService,\n    private modalService: ModalService,\n    private logger: LoggerService) { }\n\n  ngOnInit() {\n    // Subscribe to params so if it changes we pick it up. Don't technically need that here\n    // since param won't be changing while component is alive.\n    // Could use this.route.parent.snapshot.params[\"id\"] to simplify it.\n    this.route.parent.params.subscribe((params: Params) => {\n      const id = +params['id'];\n      if (id !== 0) {\n        this.operationText = 'Update';\n        this.getCustomer(id);\n      }\n    });\n\n    this.dataService.getStates().subscribe((states: IState[]) => this.states = states);\n  }\n\n  getCustomer(id: number) {\n    this.dataService.getCustomer(id).subscribe((customer: ICustomer) => {\n      this.customer = customer;\n    });\n  }\n\n  submit() {\n    if (this.customer.id === 0) {\n      this.dataService.insertCustomer(this.customer)\n        .subscribe((insertedCustomer: ICustomer) => {\n          if (insertedCustomer) {\n            // Mark form as pristine so that CanDeactivateGuard won't prompt before navigation\n            this.customerForm.form.markAsPristine();\n            this.router.navigate(['/customers']);\n          } else {\n            const msg = 'Unable to insert customer';\n            this.growler.growl(msg, GrowlerMessageType.Danger);\n            this.errorMessage = msg;\n          }\n        },\n          (err: any) => this.logger.log(err));\n    } else {\n      this.dataService.updateCustomer(this.customer)\n        .subscribe((status: boolean) => {\n          if (status) {\n            // Mark form as pristine so that CanDeactivateGuard won't prompt before navigation\n            this.customerForm.form.markAsPristine();\n            this.growler.growl('Operation performed successfully.', GrowlerMessageType.Success);\n            // this.router.navigate(['/customers']);\n          } else {\n            const msg = 'Unable to update customer';\n            this.growler.growl(msg, GrowlerMessageType.Danger);\n            this.errorMessage = msg;\n          }\n        },\n          (err: any) => this.logger.log(err));\n    }\n  }\n\n  cancel(event: Event) {\n    event.preventDefault();\n    // Route guard will take care of showing modal dialog service if data is dirty\n    this.router.navigate(['/customers']);\n  }\n\n  delete(event: Event) {\n    event.preventDefault();\n    this.dataService.deleteCustomer(this.customer.id)\n      .subscribe((status: boolean) => {\n        if (status) {\n          this.router.navigate(['/customers']);\n        } else {\n          this.errorMessage = 'Unable to delete customer';\n        }\n      },\n        (err) => this.logger.log(err));\n  }\n\n  canDeactivate(): Promise<boolean> | boolean {\n    if (!this.customerForm.dirty) {\n      return true;\n    }\n\n    // Dirty show display modal dialog to user to confirm leaving\n    const modalContent: IModalContent = {\n      header: 'Lose Unsaved Changes?',\n      body: 'You have unsaved changes! Would you like to leave the page and lose them?',\n      cancelButtonText: 'Cancel',\n      OKButtonText: 'Leave'\n    };\n    return this.modalService.show(modalContent);\n  }\n\n}\n","<div>\n  <form (ngSubmit)=\"submit()\" #customerForm=\"ngForm\" class=\"customer-form\" novalidate>\n    <div class=\"form-group\">\n      <label>First Name</label>\n      <input type=\"text\" class=\"form-control\" name=\"firstName\" [(ngModel)]=\"customer.firstName\" #firstName=\"ngModel\" required>\n      <div class=\"alert alert-danger\" [hidden]=\"firstName.pristine || firstName.valid\">First Name is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Last Name</label>\n      <input type=\"text\" class=\"form-control\" name=\"lastName\" [(ngModel)]=\"customer.lastName\" #lastName=\"ngModel\" required>\n      <div class=\"alert alert-danger\" [hidden]=\"lastName.pristine || lastName.valid\">Last Name is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Address</label>\n      <input type=\"text\" class=\"form-control\" name=\"address\" [(ngModel)]=\"customer.address\" #address=\"ngModel\" required>\n      <div class=\"alert alert-danger\" [hidden]=\"address.pristine || address.valid\">Address is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>City</label>\n      <input type=\"text\" class=\"form-control\" name=\"city\" [(ngModel)]=\"customer.city\" #city=\"ngModel\" required>\n      <div class=\"alert alert-danger\" [hidden]=\"city.pristine || city.valid\">City is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label>State</label>\n      <select class=\"form-control\" \n              [(ngModel)]=\"customer.state.abbreviation\"\n              name=\"state\" \n              required>\n          <option *ngFor=\"let state of states\" [ngValue]=\"state.abbreviation\">{{state.name}}</option>\n      </select>\n    </div>\n    <div *ngIf=\"customer\">\n      <div class=\"alert alert-warning\" *ngIf=\"customer.id && deleteMessageEnabled\">\n         Delete Customer?&nbsp;&nbsp;<button class=\"btn btn-danger\" (click)=\"delete($event)\">Yes</button>&nbsp;&nbsp;\n         <button class=\"btn btn-default\" (click)=\"deleteMessageEnabled = false\">No</button>\n      </div>\n      <button class=\"btn btn-danger\" *ngIf=\"customer.id && !deleteMessageEnabled\" (click)=\"deleteMessageEnabled = true\">Delete</button>&nbsp;&nbsp;\n\n      <div class=\"pull-right\" *ngIf=\"!deleteMessageEnabled\">\n        <button class=\"btn btn-default\" (click)=\"cancel($event)\">Cancel</button>&nbsp;&nbsp;\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"customerForm.pristine || !customerForm.valid\">{{ operationText }}</button>\n      </div>\n    </div>\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage != null\">{{ errorMessage }}</div>\n  </form>\n  <br />\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { DataService } from '../../core/services/data.service';\nimport { ICustomer, IOrder, IOrderItem } from '../../shared/interfaces';\n\n@Component({\n  selector: 'cm-customer-orders',\n  templateUrl: './customer-orders.component.html'\n})\nexport class CustomerOrdersComponent implements OnInit {\n\n  orders: IOrder[] = [];\n  customer: ICustomer;\n\n  constructor(private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit() {\n      // Subscribe to params so if it changes we pick it up.  Could use this.route.parent.snapshot.params[\"id\"] to simplify it.\n      this.route.parent.params.subscribe((params: Params) => {\n        const id = +params['id'];\n        this.dataService.getCustomer(id).subscribe((customer: ICustomer) => {\n          this.customer = customer;\n        });\n      });\n  }\n\n  ordersTrackBy(index: number, orderItem: any) {\n    return index;\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\" *ngIf=\"customer && customer.orders\">\n        <h4>Orders for {{ customer.firstName | capitalize }} {{ customer.lastName | capitalize }}</h4>\n        <br />\n        <table class=\"table table-striped table-hover orders-table\">\n            <tr *ngFor=\"let order of customer.orders;trackBy:ordersTrackBy\">\n                <td>{{ order.productName }}</td>\n                <td class=\"text-right\">{{ order.itemCost | currency:'USD':'symbol' }}</td>\n            </tr>\n            <tr class=\"summary-border\">\n                <td>&nbsp;</td>\n                <td class=\"text-right\">{{ customer.orderTotal | currency:'USD':'symbol' }}</td>\n            </tr>\n        </table>\n    </div>\n    <div *ngIf=\"customer && !customer.orders\" class=\"row\">\n        No orders found\n    </div>\n    <div *ngIf=\"!customer\" class=\"row\">\n        No customer found\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CustomerComponent } from './customer.component';\nimport { CustomerOrdersComponent } from './customer-orders/customer-orders.component';\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\nimport { CustomerEditComponent } from './customer-edit/customer-edit.component';\nimport { CreateOrderComponent } from './create-order/create-order.component';\nimport { CanActivateGuard } from './guards/can-activate.guard';\nimport { CanDeactivateGuard } from './guards/can-deactivate.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerComponent,\n    children: [\n      { path: 'orders', component: CustomerOrdersComponent },\n      { path: 'details', component: CustomerDetailsComponent },\n      { path: 'createOrder', component: CreateOrderComponent },\n      {\n        path: 'edit',\n        component: CustomerEditComponent,\n        canActivate: [CanActivateGuard],\n        canDeactivate: [CanDeactivateGuard]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [CanActivateGuard, CanDeactivateGuard]\n})\nexport class CustomerRoutingModule {\n  static components = [CustomerComponent, CustomerOrdersComponent, CustomerDetailsComponent, CustomerEditComponent, CreateOrderComponent];\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'cm-orders',\n  templateUrl: './customer.component.html'\n})\nexport class CustomerComponent implements OnInit {\n\n    // displayMode: CustomerDisplayModeEnum;\n    // displayModeEnum = CustomerDisplayModeEnum;\n\n    constructor(private router: Router) { }\n\n    ngOnInit() {\n\n      // No longer needed due to routerLinkActive feature in Angular\n      // const path = this.router.url.split('/')[3];\n      // switch (path) {\n      //   case 'details':\n      //     this.displayMode = CustomerDisplayModeEnum.Details;\n      //     break;\n      //   case 'orders':\n      //     this.displayMode = CustomerDisplayModeEnum.Orders;\n      //     break;\n      //   case 'edit':\n      //     this.displayMode = CustomerDisplayModeEnum.Edit;\n      //     break;\n      // }\n    }\n\n}\n\n// enum CustomerDisplayModeEnum {\n//   Details=0,\n//   Orders=1,\n//   Edit=2\n// }\n","<div class=\"orders view\">\n    <div class=\"container\">\n        <header>\n            <h3><span class=\"glyphicon glyphicon-user\"></span>&nbsp;&nbsp;Customer Information</h3>\n        </header>\n        <br />\n        <div class=\"navbar\">\n            <ul class=\"nav navbar-nav\">\n                <li class=\"toolbar-item\">\n                    <a routerLink=\"details\" routerLinkActive=\"active\">\n                       <span class=\"glyphicon glyphicon-list\"></span>&nbsp;&nbsp;Customer Details\n                    </a>\n                </li>\n                <li class=\"toolbar-item\">\n                    <a routerLink=\"orders\" routerLinkActive=\"active\">\n                        <span class=\"glyphicon glyphicon-tags\"></span>&nbsp;&nbsp;Customer Orders\n                    </a>\n                </li>\n                <li class=\"toolbar-item\">\n                    <a routerLink=\"edit\" routerLinkActive=\"active\">\n                        <span class=\"glyphicon glyphicon-edit\"></span>&nbsp;&nbsp;Edit Customer\n                    </a>\n                </li>\n                <li class=\"toolbar-item\">\n                  <a routerLink=\"createOrder\" routerLinkActive=\"active\">\n                    <span class=\"glyphicon glyphicon-shopping-cart\"></span>&nbsp;&nbsp;Create Order\n                  </a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"container\">\n            <router-outlet></router-outlet>\n            <br />\n            <br />\n            <a routerLink=\"/customers\">View all Customers</a>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { CustomerRoutingModule } from './customer-routing.module';\n\n@NgModule({\n  imports: [CustomerRoutingModule, SharedModule],\n  declarations: [CustomerRoutingModule.components]\n})\nexport class CustomerModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../../core/services/auth.service';\n\n@Injectable()\nexport class CanActivateGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authService.isAuthenticated) {\n        return true;\n    }\n\n    // Track URL user is trying to go to so we can send them there after logging in\n    this.authService.redirectUrl = state.url;\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { CustomerEditComponent } from '../customer-edit/customer-edit.component';\nimport { LoggerService } from '../../core/services/logger.service';\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate<CustomerEditComponent> {\n\n  constructor(private logger: LoggerService) {}\n\n  canDeactivate(\n    component: CustomerEditComponent,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n\n    this.logger.log(`CustomerId: ${route.parent.params['id']} URL: ${state.url}`);\n\n    // Check with component to see if we're able to deactivate\n    return component.canDeactivate();\n  }\n}\n"],"sourceRoot":"webpack:///"}